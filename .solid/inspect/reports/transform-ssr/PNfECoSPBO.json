{
  "resolvedId": "/home/yongqi/Repositories/yonggqiii.github.io/node_modules/solid-start/router.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import {\n  A as BaseA,\n  Location,\n  NavigateOptions,\n  Navigator,\n  Outlet as BaseOutlet,\n  Routes as BaseRoutes,\n  useLocation as useBaseLocation,\n  useNavigate as useBaseNavigate\n} from \"@solidjs/router\";\nimport { Accessor, ComponentProps, splitProps } from \"solid-js\";\nimport { Outlet as IslandsOutlet } from \"./islands/server-router\";\n\nconst A = import.meta.env.START_ISLANDS_ROUTER\n  ? function IslandsA(props: ComponentProps<typeof BaseA>) {\n      const [, rest] = splitProps(props, [\"state\", \"activeClass\", \"inactiveClass\", \"end\"]);\n      const location = useLocation();\n      const isActive = () => {\n        return props.href.startsWith(\"#\")\n          ? location.hash === props.href\n          : location.pathname === props.href;\n      };\n\n      return (\n        <a\n          link\n          {...rest}\n          state={JSON.stringify(props.state)}\n          classList={{\n            [props.inactiveClass || \"inactive\"]: !isActive(),\n            [props.activeClass || \"active\"]: isActive(),\n            ...rest.classList\n          }}\n          aria-current={isActive() ? \"page\" : undefined}\n        />\n      );\n    }\n  : BaseA;\n\nconst Routes = import.meta.env.START_ISLANDS_ROUTER\n  ? function IslandsRoutes(props: ComponentProps<any>) {\n      return (\n        <IslandsOutlet>\n          <BaseRoutes>{props.children}</BaseRoutes>\n        </IslandsOutlet>\n      );\n    }\n  : BaseRoutes;\n\nconst Outlet = import.meta.env.START_ISLANDS_ROUTER\n  ? function HybridOutlet() {\n      return (\n        <IslandsOutlet>\n          <BaseOutlet />\n        </IslandsOutlet>\n      );\n    }\n  : BaseOutlet;\n\nconst useLocation =\n  import.meta.env.START_ISLANDS_ROUTER && !import.meta.env.SSR\n    ? function IslandsUseLocation() {\n        return {\n          get pathname() {\n            let location = window.LOCATION();\n            return location.pathname;\n          },\n          get hash() {\n            let location = window.LOCATION();\n            return location.hash;\n          }\n        } as Location;\n      }\n    : useBaseLocation;\n\nconst useNavigate =\n  import.meta.env.START_ISLANDS_ROUTER && !import.meta.env.SSR\n    ? function IslandsUseNavigate() {\n        return ((to: string, props?: Partial<NavigateOptions<unknown>>) => window.NAVIGATE(to, props)) as unknown as Navigator;\n      }\n    : useBaseNavigate;\n\ndeclare global {\n  interface Window {\n    LOCATION: Accessor<Location>;\n    NAVIGATE: Navigator;\n  }\n}\n\nexport { A, Outlet, Routes, useLocation, useNavigate };\n",
      "start": 1698297472555,
      "end": 1698297472555
    },
    {
      "name": "solid-start-file-system-router",
      "start": 1698297472555,
      "end": 1698297472555,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssrElement as _$ssrElement } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { A as BaseA, Outlet as BaseOutlet, Routes as BaseRoutes, useLocation as useBaseLocation, useNavigate as useBaseNavigate } from \"@solidjs/router\";\nimport { splitProps } from \"solid-js\";\nimport { Outlet as IslandsOutlet } from \"./islands/server-router\";\nconst A = import.meta.env.START_ISLANDS_ROUTER ? function IslandsA(props) {\n  const [, rest] = splitProps(props, [\"state\", \"activeClass\", \"inactiveClass\", \"end\"]);\n  const location = useLocation();\n  const isActive = () => {\n    return props.href.startsWith(\"#\") ? location.hash === props.href : location.pathname === props.href;\n  };\n  return _$ssrElement(\"a\", _$mergeProps({\n    link: true\n  }, rest, {\n    get state() {\n      return JSON.stringify(props.state);\n    },\n    get classList() {\n      return {\n        [props.inactiveClass || \"inactive\"]: !isActive(),\n        [props.activeClass || \"active\"]: isActive(),\n        ...rest.classList\n      };\n    },\n    get [\"aria-current\"]() {\n      return isActive() ? \"page\" : undefined;\n    }\n  }), undefined, true);\n} : BaseA;\nconst Routes = import.meta.env.START_ISLANDS_ROUTER ? function IslandsRoutes(props) {\n  return _$createComponent(IslandsOutlet, {\n    get children() {\n      return _$createComponent(BaseRoutes, {\n        get children() {\n          return props.children;\n        }\n      });\n    }\n  });\n} : BaseRoutes;\nconst Outlet = import.meta.env.START_ISLANDS_ROUTER ? function HybridOutlet() {\n  return _$createComponent(IslandsOutlet, {\n    get children() {\n      return _$createComponent(BaseOutlet, {});\n    }\n  });\n} : BaseOutlet;\nconst useLocation = import.meta.env.START_ISLANDS_ROUTER && !import.meta.env.SSR ? function IslandsUseLocation() {\n  return {\n    get pathname() {\n      let location = window.LOCATION();\n      return location.pathname;\n    },\n    get hash() {\n      let location = window.LOCATION();\n      return location.hash;\n    }\n  };\n} : useBaseLocation;\nconst useNavigate = import.meta.env.START_ISLANDS_ROUTER && !import.meta.env.SSR ? function IslandsUseNavigate() {\n  return (to, props) => window.NAVIGATE(to, props);\n} : useBaseNavigate;\nexport { A, Outlet, Routes, useLocation, useNavigate };",
      "start": 1698297472555,
      "end": 1698297472567,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "A",
          "BaseA",
          "Outlet",
          "BaseOutlet",
          "Routes",
          "BaseRoutes",
          "useLocation",
          "useBaseLocation",
          "useNavigate",
          "useBaseNavigate",
          "splitProps",
          "IslandsOutlet",
          "import",
          "meta",
          "env",
          "START_ISLANDS_ROUTER",
          "IslandsA",
          "props",
          "rest",
          "location",
          "isActive",
          "href",
          "startsWith",
          "hash",
          "pathname",
          "_$ssrElement",
          "_$mergeProps",
          "link",
          "state",
          "JSON",
          "stringify",
          "classList",
          "inactiveClass",
          "activeClass",
          "aria-current",
          "undefined",
          "IslandsRoutes",
          "_$createComponent",
          "children",
          "HybridOutlet",
          "SSR",
          "IslandsUseLocation",
          "window",
          "LOCATION",
          "IslandsUseNavigate",
          "to",
          "NAVIGATE"
        ],
        "sources": [
          "router.tsx"
        ],
        "sourcesContent": [
          "import {\n  A as BaseA,\n  Location,\n  NavigateOptions,\n  Navigator,\n  Outlet as BaseOutlet,\n  Routes as BaseRoutes,\n  useLocation as useBaseLocation,\n  useNavigate as useBaseNavigate\n} from \"@solidjs/router\";\nimport { Accessor, ComponentProps, splitProps } from \"solid-js\";\nimport { Outlet as IslandsOutlet } from \"./islands/server-router\";\n\nconst A = import.meta.env.START_ISLANDS_ROUTER\n  ? function IslandsA(props: ComponentProps<typeof BaseA>) {\n      const [, rest] = splitProps(props, [\"state\", \"activeClass\", \"inactiveClass\", \"end\"]);\n      const location = useLocation();\n      const isActive = () => {\n        return props.href.startsWith(\"#\")\n          ? location.hash === props.href\n          : location.pathname === props.href;\n      };\n\n      return (\n        <a\n          link\n          {...rest}\n          state={JSON.stringify(props.state)}\n          classList={{\n            [props.inactiveClass || \"inactive\"]: !isActive(),\n            [props.activeClass || \"active\"]: isActive(),\n            ...rest.classList\n          }}\n          aria-current={isActive() ? \"page\" : undefined}\n        />\n      );\n    }\n  : BaseA;\n\nconst Routes = import.meta.env.START_ISLANDS_ROUTER\n  ? function IslandsRoutes(props: ComponentProps<any>) {\n      return (\n        <IslandsOutlet>\n          <BaseRoutes>{props.children}</BaseRoutes>\n        </IslandsOutlet>\n      );\n    }\n  : BaseRoutes;\n\nconst Outlet = import.meta.env.START_ISLANDS_ROUTER\n  ? function HybridOutlet() {\n      return (\n        <IslandsOutlet>\n          <BaseOutlet />\n        </IslandsOutlet>\n      );\n    }\n  : BaseOutlet;\n\nconst useLocation =\n  import.meta.env.START_ISLANDS_ROUTER && !import.meta.env.SSR\n    ? function IslandsUseLocation() {\n        return {\n          get pathname() {\n            let location = window.LOCATION();\n            return location.pathname;\n          },\n          get hash() {\n            let location = window.LOCATION();\n            return location.hash;\n          }\n        } as Location;\n      }\n    : useBaseLocation;\n\nconst useNavigate =\n  import.meta.env.START_ISLANDS_ROUTER && !import.meta.env.SSR\n    ? function IslandsUseNavigate() {\n        return ((to: string, props?: Partial<NavigateOptions<unknown>>) => window.NAVIGATE(to, props)) as unknown as Navigator;\n      }\n    : useBaseNavigate;\n\ndeclare global {\n  interface Window {\n    LOCATION: Accessor<Location>;\n    NAVIGATE: Navigator;\n  }\n}\n\nexport { A, Outlet, Routes, useLocation, useNavigate };\n"
        ],
        "mappings": "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",
        "x_google_ignoreList": [
          0
        ]
      }
    },
    {
      "name": "vite:css",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "solid-start-server",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssrElement as _$ssrElement } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { A as BaseA, Outlet as BaseOutlet, Routes as BaseRoutes, useLocation as useBaseLocation, useNavigate as useBaseNavigate } from \"@solidjs/router\";\nimport { splitProps } from \"solid-js\";\nimport { Outlet as IslandsOutlet } from \"./islands/server-router\";\nconst A = false ? function IslandsA(props) {\n  const [, rest] = splitProps(props, [\"state\", \"activeClass\", \"inactiveClass\", \"end\"]);\n  const location = useLocation();\n  const isActive = () => {\n    return props.href.startsWith(\"#\") ? location.hash === props.href : location.pathname === props.href;\n  };\n  return _$ssrElement(\"a\", _$mergeProps({\n    link: true\n  }, rest, {\n    get state() {\n      return JSON.stringify(props.state);\n    },\n    get classList() {\n      return {\n        [props.inactiveClass || \"inactive\"]: !isActive(),\n        [props.activeClass || \"active\"]: isActive(),\n        ...rest.classList\n      };\n    },\n    get [\"aria-current\"]() {\n      return isActive() ? \"page\" : undefined;\n    }\n  }), undefined, true);\n} : BaseA;\nconst Routes = false ? function IslandsRoutes(props) {\n  return _$createComponent(IslandsOutlet, {\n    get children() {\n      return _$createComponent(BaseRoutes, {\n        get children() {\n          return props.children;\n        }\n      });\n    }\n  });\n} : BaseRoutes;\nconst Outlet = false ? function HybridOutlet() {\n  return _$createComponent(IslandsOutlet, {\n    get children() {\n      return _$createComponent(BaseOutlet, {});\n    }\n  });\n} : BaseOutlet;\nconst useLocation = false && !import.meta.env.SSR ? function IslandsUseLocation() {\n  return {\n    get pathname() {\n      let location = window.LOCATION();\n      return location.pathname;\n    },\n    get hash() {\n      let location = window.LOCATION();\n      return location.hash;\n    }\n  };\n} : useBaseLocation;\nconst useNavigate = false && !import.meta.env.SSR ? function IslandsUseNavigate() {\n  return (to, props) => window.NAVIGATE(to, props);\n} : useBaseNavigate;\nexport { A, Outlet, Routes, useLocation, useNavigate };",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1698297472567,
      "end": 1698297472567,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":true};import.meta.env.START_SSR = true;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"static\";import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssrElement as _$ssrElement } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { A as BaseA, Outlet as BaseOutlet, Routes as BaseRoutes, useLocation as useBaseLocation, useNavigate as useBaseNavigate } from \"/node_modules/@solidjs/router/dist/index.jsx\";\nimport { splitProps } from \"solid-js\";\nimport { Outlet as IslandsOutlet } from \"/node_modules/solid-start/islands/server-router.tsx\";\nconst A = false ? function IslandsA(props) {\n  const [, rest] = splitProps(props, [\"state\", \"activeClass\", \"inactiveClass\", \"end\"]);\n  const location = useLocation();\n  const isActive = () => {\n    return props.href.startsWith(\"#\") ? location.hash === props.href : location.pathname === props.href;\n  };\n  return _$ssrElement(\"a\", _$mergeProps({\n    link: true\n  }, rest, {\n    get state() {\n      return JSON.stringify(props.state);\n    },\n    get classList() {\n      return {\n        [props.inactiveClass || \"inactive\"]: !isActive(),\n        [props.activeClass || \"active\"]: isActive(),\n        ...rest.classList\n      };\n    },\n    get [\"aria-current\"]() {\n      return isActive() ? \"page\" : undefined;\n    }\n  }), undefined, true);\n} : BaseA;\nconst Routes = false ? function IslandsRoutes(props) {\n  return _$createComponent(IslandsOutlet, {\n    get children() {\n      return _$createComponent(BaseRoutes, {\n        get children() {\n          return props.children;\n        }\n      });\n    }\n  });\n} : BaseRoutes;\nconst Outlet = false ? function HybridOutlet() {\n  return _$createComponent(IslandsOutlet, {\n    get children() {\n      return _$createComponent(BaseOutlet, {});\n    }\n  });\n} : BaseOutlet;\nconst useLocation = false && !import.meta.env.SSR ? function IslandsUseLocation() {\n  return {\n    get pathname() {\n      let location = window.LOCATION();\n      return location.pathname;\n    },\n    get hash() {\n      let location = window.LOCATION();\n      return location.hash;\n    }\n  };\n} : useBaseLocation;\nconst useNavigate = false && !import.meta.env.SSR ? function IslandsUseNavigate() {\n  return (to, props) => window.NAVIGATE(to, props);\n} : useBaseNavigate;\nexport { A, Outlet, Routes, useLocation, useNavigate };",
      "start": 1698297472567,
      "end": 1698297472568,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
