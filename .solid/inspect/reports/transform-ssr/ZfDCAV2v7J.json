{
  "resolvedId": "/home/yongqi/Repositories/yonggqiii.github.io/node_modules/solid-start/root/Document.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import type { JSX } from \"solid-js\";\nimport { children, ComponentProps } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"./Links\";\nimport Meta from \"./Meta\";\nimport Scripts from \"./Scripts\";\n\nexport function Html(props: ComponentProps<\"html\">) {\n  if (import.meta.env.START_ISLANDS) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false) as unknown as JSX.Element;\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false) as unknown as JSX.Element;\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\n\nexport function Head(props: ComponentProps<\"head\">) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\n      \"head\",\n      props,\n      () => (\n        <>\n          {escape(props.children as string)}\n          <Meta />\n          <Links />\n        </>\n      ),\n      false\n    ) as unknown as JSX.Element;\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\n\nexport function Body(props: ComponentProps<\"body\">) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\n      \"body\",\n      props,\n      () => (import.meta.env.START_SSR ? escape(props.children as string) : <Scripts />),\n      false\n    ) as unknown as JSX.Element;\n  } else {\n    if (import.meta.env.START_SSR) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(\n        document.body,\n        () => {\n          let childNodes = child();\n          if (childNodes) {\n            if (Array.isArray(childNodes)) {\n              let els = childNodes.filter(n => Boolean(n));\n\n              if (!els.length) {\n                return null;\n              }\n\n              return els;\n            }\n            return childNodes;\n          }\n          return null;\n        },\n        null,\n        [...document.body.childNodes]\n      );\n\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}\n",
      "start": 1698297472644,
      "end": 1698297472644
    },
    {
      "name": "solid-start-file-system-router",
      "start": 1698297472644,
      "end": 1698297472644,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { children } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"./Links\";\nimport Meta from \"./Meta\";\nimport Scripts from \"./Scripts\";\nexport function Html(props) {\n  if (import.meta.env.START_ISLANDS) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false);\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false);\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\nexport function Head(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"head\", props, () => [escape(props.children), _$createComponent(Meta, {}), _$createComponent(Links, {})], false);\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\nexport function Body(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"body\", props, () => import.meta.env.START_SSR ? escape(props.children) : _$createComponent(Scripts, {}), false);\n  } else {\n    if (import.meta.env.START_SSR) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(document.body, () => {\n        let childNodes = child();\n        if (childNodes) {\n          if (Array.isArray(childNodes)) {\n            let els = childNodes.filter(n => Boolean(n));\n            if (!els.length) {\n              return null;\n            }\n            return els;\n          }\n          return childNodes;\n        }\n        return null;\n      }, null, [...document.body.childNodes]);\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}",
      "start": 1698297472644,
      "end": 1698297472656,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "children",
          "escape",
          "insert",
          "NoHydration",
          "spread",
          "ssrElement",
          "Links",
          "Meta",
          "Scripts",
          "Html",
          "props",
          "import",
          "meta",
          "env",
          "START_ISLANDS",
          "undefined",
          "SSR",
          "document",
          "documentElement",
          "Head",
          "_$createComponent",
          "head",
          "Body",
          "START_SSR",
          "child",
          "body",
          "childNodes",
          "Array",
          "isArray",
          "els",
          "filter",
          "n",
          "Boolean",
          "length"
        ],
        "sources": [
          "Document.tsx"
        ],
        "sourcesContent": [
          "import type { JSX } from \"solid-js\";\nimport { children, ComponentProps } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"./Links\";\nimport Meta from \"./Meta\";\nimport Scripts from \"./Scripts\";\n\nexport function Html(props: ComponentProps<\"html\">) {\n  if (import.meta.env.START_ISLANDS) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false) as unknown as JSX.Element;\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false) as unknown as JSX.Element;\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\n\nexport function Head(props: ComponentProps<\"head\">) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\n      \"head\",\n      props,\n      () => (\n        <>\n          {escape(props.children as string)}\n          <Meta />\n          <Links />\n        </>\n      ),\n      false\n    ) as unknown as JSX.Element;\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\n\nexport function Body(props: ComponentProps<\"body\">) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\n      \"body\",\n      props,\n      () => (import.meta.env.START_SSR ? escape(props.children as string) : <Scripts />),\n      false\n    ) as unknown as JSX.Element;\n  } else {\n    if (import.meta.env.START_SSR) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(\n        document.body,\n        () => {\n          let childNodes = child();\n          if (childNodes) {\n            if (Array.isArray(childNodes)) {\n              let els = childNodes.filter(n => Boolean(n));\n\n              if (!els.length) {\n                return null;\n              }\n\n              return els;\n            }\n            return childNodes;\n          }\n          return null;\n        },\n        null,\n        [...document.body.childNodes]\n      );\n\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}\n"
        ],
        "mappings": "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",
        "x_google_ignoreList": [
          0
        ]
      }
    },
    {
      "name": "vite:css",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "solid-start-server",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { children } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"./Links\";\nimport Meta from \"./Meta\";\nimport Scripts from \"./Scripts\";\nexport function Html(props) {\n  if (false) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false);\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false);\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\nexport function Head(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"head\", props, () => [escape(props.children), _$createComponent(Meta, {}), _$createComponent(Links, {})], false);\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\nexport function Body(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"body\", props, () => true ? escape(props.children) : _$createComponent(Scripts, {}), false);\n  } else {\n    if (true) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(document.body, () => {\n        let childNodes = child();\n        if (childNodes) {\n          if (Array.isArray(childNodes)) {\n            let els = childNodes.filter(n => Boolean(n));\n            if (!els.length) {\n              return null;\n            }\n            return els;\n          }\n          return childNodes;\n        }\n        return null;\n      }, null, [...document.body.childNodes]);\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1698297472656,
      "end": 1698297472656,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":true};import.meta.env.START_SSR = true;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"static\";import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { children } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"/node_modules/solid-start/root/Links.tsx\";\nimport Meta from \"/node_modules/solid-start/root/Meta.tsx\";\nimport Scripts from \"/node_modules/solid-start/root/Scripts.tsx\";\nexport function Html(props) {\n  if (false) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false);\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false);\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\nexport function Head(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"head\", props, () => [escape(props.children), _$createComponent(Meta, {}), _$createComponent(Links, {})], false);\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\nexport function Body(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"body\", props, () => true ? escape(props.children) : _$createComponent(Scripts, {}), false);\n  } else {\n    if (true) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(document.body, () => {\n        let childNodes = child();\n        if (childNodes) {\n          if (Array.isArray(childNodes)) {\n            let els = childNodes.filter(n => Boolean(n));\n            if (!els.length) {\n              return null;\n            }\n            return els;\n          }\n          return childNodes;\n        }\n        return null;\n      }, null, [...document.body.childNodes]);\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}",
      "start": 1698297472656,
      "end": 1698297472657,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
