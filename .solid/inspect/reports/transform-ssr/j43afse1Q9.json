{
  "resolvedId": "/home/yongqi/Repositories/yonggqiii.github.io/node_modules/solid-start/root/Scripts.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\n\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\n\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return (\n    <>\n      {isSSR && <HydrationScript />}\n      {isIslands && (\n        <script>{`\n        _$HY.islandMap = {};\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\n      `}</script>\n      )}\n      <NoHydration>\n        {isServer &&\n          (isDev ? (\n            <>\n              <script type=\"module\" src=\"/@vite/client\" $ServerOnly></script>\n              <script\n                type=\"module\"\n                async\n                src={\"/@fs/\" + import.meta.env.START_ENTRY_CLIENT}\n                $ServerOnly\n              ></script>\n            </>\n          ) : isSSR ? (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"entry-client\"][0].href} />\n          ) : import.meta.env.START_INDEX_HTML ? (\n            // used in the SPA build index.html mode to create a reference to index html\n            // which will be used by the client build\n            <script type=\"module\" async src={import.meta.env.START_ENTRY_CLIENT} $ServerOnly />\n          ) : (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"index.html\"][0].href} />\n          ))}\n      </NoHydration>\n      {isDev && <InlineStyles />}\n    </>\n  );\n}\n",
      "start": 1720885728753,
      "end": 1720885728753
    },
    {
      "name": "solid-start-file-system-router",
      "start": 1720885728753,
      "end": 1720885728753,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<script\", \">\\n        _$HY.islandMap = {};\\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\\n      </script>\"],\n  _tmpl$2 = [\"<script\", \" type=\\\"module\\\" src=\\\"/@vite/client\\\"></script>\"],\n  _tmpl$3 = [\"<script\", \" type=\\\"module\\\" async src=\\\"\", \"\\\"></script>\"],\n  _tmpl$4 = [\"<script\", \" type=\\\"module\\\" async\", \"></script>\"];\nimport { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$ssr(_tmpl$, _$ssrHydrationKey()), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$ssr(_tmpl$2, _$ssrHydrationKey()), _$ssr(_tmpl$3, _$ssrHydrationKey(), \"/@fs/\" + _$escape(import.meta.env.START_ENTRY_CLIENT, true))] : isSSR ? // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"entry-client\"][0].href, true), false)) : import.meta.env.START_INDEX_HTML ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(import.meta.env.START_ENTRY_CLIENT, true), false)) : // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"index.html\"][0].href, true), false)));\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}",
      "start": 1720885728753,
      "end": 1720885728757,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "useContext",
          "HydrationScript",
          "isServer",
          "NoHydration",
          "ServerContext",
          "InlineStyles",
          "isDev",
          "import",
          "meta",
          "env",
          "MODE",
          "isSSR",
          "START_SSR",
          "isIslands",
          "START_ISLANDS",
          "Scripts",
          "context",
          "_$createComponent",
          "_$ssr",
          "_tmpl$",
          "_$ssrHydrationKey",
          "children",
          "_tmpl$2",
          "_tmpl$3",
          "_$escape",
          "START_ENTRY_CLIENT",
          "_tmpl$4",
          "_$ssrAttribute",
          "manifest",
          "href",
          "START_INDEX_HTML"
        ],
        "sources": [
          "Scripts.tsx"
        ],
        "sourcesContent": [
          "import { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\n\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\n\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return (\n    <>\n      {isSSR && <HydrationScript />}\n      {isIslands && (\n        <script>{`\n        _$HY.islandMap = {};\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\n      `}</script>\n      )}\n      <NoHydration>\n        {isServer &&\n          (isDev ? (\n            <>\n              <script type=\"module\" src=\"/@vite/client\" $ServerOnly></script>\n              <script\n                type=\"module\"\n                async\n                src={\"/@fs/\" + import.meta.env.START_ENTRY_CLIENT}\n                $ServerOnly\n              ></script>\n            </>\n          ) : isSSR ? (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"entry-client\"][0].href} />\n          ) : import.meta.env.START_INDEX_HTML ? (\n            // used in the SPA build index.html mode to create a reference to index html\n            // which will be used by the client build\n            <script type=\"module\" async src={import.meta.env.START_ENTRY_CLIENT} $ServerOnly />\n          ) : (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"index.html\"][0].href} />\n          ))}\n      </NoHydration>\n      {isDev && <InlineStyles />}\n    </>\n  );\n}\n"
        ],
        "mappings": ";;;;;;;;;AAAA,SAASA,UAAU,QAAQ,UAAU;AACrC,SAASC,eAAe,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,cAAc;AACrE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK,aAAa;AACpD,MAAMC,KAAK,GAAGJ,MAAM,CAACC,IAAI,CAACC,GAAG,CAACG,SAAS;AACvC,MAAMC,SAAS,GAAGN,MAAM,CAACC,IAAI,CAACC,GAAG,CAACK,aAAa;AAE/C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,MAAMC,OAAO,GAAGhB,UAAU,CAACI,aAAa,CAAC;EACzC,QAEKO,KAAK,IAAAM,iBAAA,CAAKhB,eAAe,KAAG,EAC5BY,SAAS,IAAAK,KAAA,CAAAC,MAAA,EAAAC,iBAAA,GAKT,EAAAH,iBAAA,CACAd,WAAW;IAAA,IAAAkB,SAAA;MAAA,OACTnB,QAAQ,KACNI,KAAK,IAAAY,KAAA,CAAAI,OAAA,EAAAF,iBAAA,KAAAF,KAAA,CAAAK,OAAA,EAAAH,iBAAA,IAMK,OAAO,GAAAI,QAAA,CAAGjB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACgB,kBAAkB,YAInDd,KAAK,GACP;MAAAO,KAAA,CAAAQ,OAAA,EAAAN,iBAAA,IAAAO,cAAA,QAAAH,QAAA,CACiCR,OAAO,CAAEP,GAAG,CAACmB,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,mBAC5EtB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACqB,gBAAgB,GAClC;MACA;MAAAZ,KAAA,CAAAQ,OAAA,EAAAN,iBAAA,IAAAO,cAAA,QAAAH,QAAA,CACiCjB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACgB,kBAAkB,mBAEnE;MAAAP,KAAA,CAAAQ,OAAA,EAAAN,iBAAA,IAAAO,cAAA,QAAAH,QAAA,CACiCR,OAAO,CAAEP,GAAG,CAACmB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,gBAC7E,CAAC;IAAA;EAAA,IAELvB,KAAK,IAAAW,iBAAA,CAAKZ,YAAY,KAAG;AAGhC",
        "x_google_ignoreList": [
          0
        ]
      }
    },
    {
      "name": "vite:css",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "solid-start-server",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<script\", \">\\n        _$HY.islandMap = {};\\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\\n      </script>\"],\n  _tmpl$2 = [\"<script\", \" type=\\\"module\\\" src=\\\"/@vite/client\\\"></script>\"],\n  _tmpl$3 = [\"<script\", \" type=\\\"module\\\" async src=\\\"\", \"\\\"></script>\"],\n  _tmpl$4 = [\"<script\", \" type=\\\"module\\\" async\", \"></script>\"];\nimport { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = true;\nconst isIslands = false;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$ssr(_tmpl$, _$ssrHydrationKey()), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$ssr(_tmpl$2, _$ssrHydrationKey()), _$ssr(_tmpl$3, _$ssrHydrationKey(), \"/@fs/\" + _$escape(\"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\", true))] : isSSR ? // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"entry-client\"][0].href, true), false)) : false ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(\"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\", true), false)) : // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"index.html\"][0].href, true), false)));\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":true};import.meta.env.START_SSR = true;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"static\";import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<script\", \">\\n        _$HY.islandMap = {};\\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\\n      </script>\"],\n  _tmpl$2 = [\"<script\", \" type=\\\"module\\\" src=\\\"/@vite/client\\\"></script>\"],\n  _tmpl$3 = [\"<script\", \" type=\\\"module\\\" async src=\\\"\", \"\\\"></script>\"],\n  _tmpl$4 = [\"<script\", \" type=\\\"module\\\" async\", \"></script>\"];\nimport { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"/node_modules/solid-start/server/ServerContext.tsx\";\nimport { InlineStyles } from \"/node_modules/solid-start/root/InlineStyles.tsx\";\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = true;\nconst isIslands = false;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$ssr(_tmpl$, _$ssrHydrationKey()), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$ssr(_tmpl$2, _$ssrHydrationKey()), _$ssr(_tmpl$3, _$ssrHydrationKey(), \"/@fs/\" + _$escape(\"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\", true))] : isSSR ? // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"entry-client\"][0].href, true), false)) : false ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(\"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\", true), false)) : // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"index.html\"][0].href, true), false)));\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}",
      "start": 1720885728757,
      "end": 1720885728757,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
