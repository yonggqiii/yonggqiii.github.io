{
  "resolvedId": "/home/yongqi/Repositories/yonggqiii.github.io/node_modules/solid-start/islands/clientOnly.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import type { Component, ComponentProps, JSX } from \"solid-js\";\nimport { createMemo, createSignal, onMount, sharedConfig, splitProps, untrack } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\n\n// not using Suspense\nexport default function clientOnly<T extends Component<any>>(\n  fn: () => Promise<{\n    default: T;\n  }>\n) {\n  if (isServer) return (props: ComponentProps<T> & { fallback?: JSX.Element }) => props.fallback;\n\n  const [comp, setComp] = createSignal<T>();\n  fn().then(m => setComp(() => m.default));\n  return (props: ComponentProps<T>) => {\n    let Comp: T | undefined;\n    let m: boolean;\n    const [, rest] = splitProps(props, [\"fallback\"]);\n    if ((Comp = comp()) && !sharedConfig.context) return Comp(rest);\n    const [mounted, setMounted] = createSignal(!sharedConfig.context);\n    onMount(() => setMounted(true));\n    return createMemo(\n      () => (\n        (Comp = comp()), (m = mounted()), untrack(() => (Comp && m ? Comp(rest) : props.fallback))\n      )\n    );\n  };\n}\n",
      "start": 1720943855220,
      "end": 1720943855220
    },
    {
      "name": "solid-start-file-system-router",
      "start": 1720943855220,
      "end": 1720943855220,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { createMemo, createSignal, onMount, sharedConfig, splitProps, untrack } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\n\n// not using Suspense\nexport default function clientOnly(fn) {\n  if (isServer) return props => props.fallback;\n  const [comp, setComp] = createSignal();\n  fn().then(m => setComp(() => m.default));\n  return props => {\n    let Comp;\n    let m;\n    const [, rest] = splitProps(props, [\"fallback\"]);\n    if ((Comp = comp()) && !sharedConfig.context) return Comp(rest);\n    const [mounted, setMounted] = createSignal(!sharedConfig.context);\n    onMount(() => setMounted(true));\n    return createMemo(() => (Comp = comp(), m = mounted(), untrack(() => Comp && m ? Comp(rest) : props.fallback)));\n  };\n}",
      "start": 1720943855220,
      "end": 1720943855223,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "createMemo",
          "createSignal",
          "onMount",
          "sharedConfig",
          "splitProps",
          "untrack",
          "isServer",
          "clientOnly",
          "fn",
          "props",
          "fallback",
          "comp",
          "setComp",
          "then",
          "m",
          "default",
          "Comp",
          "rest",
          "context",
          "mounted",
          "setMounted"
        ],
        "sources": [
          "clientOnly.tsx"
        ],
        "sourcesContent": [
          "import type { Component, ComponentProps, JSX } from \"solid-js\";\nimport { createMemo, createSignal, onMount, sharedConfig, splitProps, untrack } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\n\n// not using Suspense\nexport default function clientOnly<T extends Component<any>>(\n  fn: () => Promise<{\n    default: T;\n  }>\n) {\n  if (isServer) return (props: ComponentProps<T> & { fallback?: JSX.Element }) => props.fallback;\n\n  const [comp, setComp] = createSignal<T>();\n  fn().then(m => setComp(() => m.default));\n  return (props: ComponentProps<T>) => {\n    let Comp: T | undefined;\n    let m: boolean;\n    const [, rest] = splitProps(props, [\"fallback\"]);\n    if ((Comp = comp()) && !sharedConfig.context) return Comp(rest);\n    const [mounted, setMounted] = createSignal(!sharedConfig.context);\n    onMount(() => setMounted(true));\n    return createMemo(\n      () => (\n        (Comp = comp()), (m = mounted()), untrack(() => (Comp && m ? Comp(rest) : props.fallback))\n      )\n    );\n  };\n}\n"
        ],
        "mappings": "AACA,SAASA,UAAU,EAAEC,YAAY,EAAEC,OAAO,EAAEC,YAAY,EAAEC,UAAU,EAAEC,OAAO,QAAQ,UAAU;AAC/F,SAASC,QAAQ,QAAQ,cAAc;;AAEvC;AACA,eAAe,SAASC,UAAUA,CAChCC,EAEE,EACF;EACA,IAAIF,QAAQ,EAAE,OAAQG,KAAqD,IAAKA,KAAK,CAACC,QAAQ;EAE9F,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,YAAY,CAAI,CAAC;EACzCO,EAAE,CAAC,CAAC,CAACK,IAAI,CAACC,CAAC,IAAIF,OAAO,CAAC,MAAME,CAAC,CAACC,OAAO,CAAC,CAAC;EACxC,OAAQN,KAAwB,IAAK;IACnC,IAAIO,IAAmB;IACvB,IAAIF,CAAU;IACd,MAAM,GAAGG,IAAI,CAAC,GAAGb,UAAU,CAACK,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC;IAChD,IAAI,CAACO,IAAI,GAAGL,IAAI,CAAC,CAAC,KAAK,CAACR,YAAY,CAACe,OAAO,EAAE,OAAOF,IAAI,CAACC,IAAI,CAAC;IAC/D,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGnB,YAAY,CAAC,CAACE,YAAY,CAACe,OAAO,CAAC;IACjEhB,OAAO,CAAC,MAAMkB,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/B,OAAOpB,UAAU,CACf,OACGgB,IAAI,GAAGL,IAAI,CAAC,CAAC,EAAIG,CAAC,GAAGK,OAAO,CAAC,CAAC,EAAGd,OAAO,CAAC,MAAOW,IAAI,IAAIF,CAAC,GAAGE,IAAI,CAACC,IAAI,CAAC,GAAGR,KAAK,CAACC,QAAS,CAAC,CAE9F,CAAC;EACH,CAAC;AACH",
        "x_google_ignoreList": [
          0
        ]
      }
    },
    {
      "name": "vite:css",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "solid-start-server",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createMemo, createSignal, onMount, sharedConfig, splitProps, untrack } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\n\n// not using Suspense\nexport default function clientOnly(fn) {\n  if (isServer) return props => props.fallback;\n  const [comp, setComp] = createSignal();\n  fn().then(m => setComp(() => m.default));\n  return props => {\n    let Comp;\n    let m;\n    const [, rest] = splitProps(props, [\"fallback\"]);\n    if ((Comp = comp()) && !sharedConfig.context) return Comp(rest);\n    const [mounted, setMounted] = createSignal(!sharedConfig.context);\n    onMount(() => setMounted(true));\n    return createMemo(() => (Comp = comp(), m = mounted(), untrack(() => Comp && m ? Comp(rest) : props.fallback)));\n  };\n}",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createMemo, createSignal, onMount, sharedConfig, splitProps, untrack } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\n\n// not using Suspense\nexport default function clientOnly(fn) {\n  if (isServer) return props => props.fallback;\n  const [comp, setComp] = createSignal();\n  fn().then(m => setComp(() => m.default));\n  return props => {\n    let Comp;\n    let m;\n    const [, rest] = splitProps(props, [\"fallback\"]);\n    if ((Comp = comp()) && !sharedConfig.context) return Comp(rest);\n    const [mounted, setMounted] = createSignal(!sharedConfig.context);\n    onMount(() => setMounted(true));\n    return createMemo(() => (Comp = comp(), m = mounted(), untrack(() => Comp && m ? Comp(rest) : props.fallback)));\n  };\n}",
      "start": 1720943855223,
      "end": 1720943855223,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
