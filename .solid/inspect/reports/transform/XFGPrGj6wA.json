{
  "resolvedId": "/home/yongqi/Repositories/yonggqiii.github.io/node_modules/solid-start/islands/index.tsx?v=b59f1b3e",
  "transforms": [
    {
      "name": "__load__",
      "result": "import { Component, ComponentProps, lazy, splitProps, useContext } from \"solid-js\";\nimport { Hydration, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { IslandManifest } from \"../server/types\";\nexport { default as clientOnly } from \"./clientOnly\";\n\ndeclare module \"solid-js\" {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"solid-island\": {\n        \"data-props\": string;\n        \"data-component\": string;\n        \"data-island\": string;\n        \"data-when\": \"idle\" | \"load\";\n        children: JSX.Element;\n      };\n      \"solid-children\": {\n        children: JSX.Element;\n      };\n    }\n  }\n}\n\nexport function island<T extends Component<any>>(\n  Comp:\n    | T\n    | (() => Promise<{\n        default: T;\n      }>),\n  path?: string\n): T {\n  let Component = Comp as T;\n\n  if (!import.meta.env.START_ISLANDS) {\n    // TODO: have some sane semantics for islands used in non-island mode\n    return lazy(Comp as () => Promise<{ default: T }>);\n  }\n\n  function IslandComponent(props: ComponentProps<any>) {\n    return (\n      <Component {...props}>\n        <solid-children>\n          <NoHydration>{props.children}</NoHydration>\n        </solid-children>\n      </Component>\n    );\n  }\n\n  return ((compProps: ComponentProps<T>) => {\n    if (import.meta.env.SSR) {\n      const context = useContext(ServerContext);\n      const [, props] = splitProps(compProps, [\"children\"]);\n\n      let fpath;\n\n      if (import.meta.env.PROD && context && context.env.manifest && path && path in context.env.manifest) {\n        fpath = (context.env.manifest[path] as IslandManifest).script.href;\n      } else {\n        fpath = `/` + path;\n      }\n\n      return (\n        <Hydration>\n          <solid-island\n            data-props={JSON.stringify(props)}\n            data-component={fpath}\n            data-island={`/` + path}\n            data-when={props[\"client:idle\"] ? \"idle\" : \"load\"}\n          >\n            <IslandComponent {...compProps} />\n          </solid-island>\n        </Hydration>\n      );\n    } else {\n      return <IslandComponent />;\n    }\n  }) as T;\n}\n",
      "start": 1720885728904,
      "end": 1720885728904
    },
    {
      "name": "solid-start-file-system-router",
      "start": 1720885728904,
      "end": 1720885728904,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { template as _$template } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { setProperty as _$setProperty } from \"solid-js/web\";\nimport { mergeProps as _$mergeProps } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { getOwner as _$getOwner } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<solid-children>`, true, false),\n  _tmpl$2 = /*#__PURE__*/_$template(`<solid-island>`, true, false);\nimport { lazy, splitProps, useContext } from \"solid-js\";\nimport { Hydration, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nexport { default as clientOnly } from \"./clientOnly\";\nexport function island(Comp, path) {\n  let Component = Comp;\n  if (!import.meta.env.START_ISLANDS) {\n    // TODO: have some sane semantics for islands used in non-island mode\n    return lazy(Comp);\n  }\n  function IslandComponent(props) {\n    return _$createComponent(Component, _$mergeProps(props, {\n      get children() {\n        const _el$ = _$getNextElement(_tmpl$);\n        _el$._$owner = _$getOwner();\n        _$insert(_el$, _$createComponent(NoHydration, {\n          get children() {\n            return props.children;\n          }\n        }));\n        return _el$;\n      }\n    }));\n  }\n  return compProps => {\n    if (import.meta.env.SSR) {\n      const context = useContext(ServerContext);\n      const [, props] = splitProps(compProps, [\"children\"]);\n      let fpath;\n      if (import.meta.env.PROD && context && context.env.manifest && path && path in context.env.manifest) {\n        fpath = context.env.manifest[path].script.href;\n      } else {\n        fpath = `/` + path;\n      }\n      return _$createComponent(Hydration, {\n        get children() {\n          const _el$2 = _$getNextElement(_tmpl$2);\n          _$setProperty(_el$2, \"dataComponent\", fpath);\n          _$setProperty(_el$2, \"dataIsland\", `/` + path);\n          _el$2._$owner = _$getOwner();\n          _$insert(_el$2, _$createComponent(IslandComponent, compProps));\n          _$effect(_p$ => {\n            const _v$ = JSON.stringify(props),\n              _v$2 = props[\"client:idle\"] ? \"idle\" : \"load\";\n            _v$ !== _p$._v$ && _$setProperty(_el$2, \"dataProps\", _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && _$setProperty(_el$2, \"dataWhen\", _p$._v$2 = _v$2);\n            return _p$;\n          }, {\n            _v$: undefined,\n            _v$2: undefined\n          });\n          return _el$2;\n        }\n      });\n    } else {\n      return _$createComponent(IslandComponent, {});\n    }\n  };\n}",
      "start": 1720885728904,
      "end": 1720885728910,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "lazy",
          "splitProps",
          "useContext",
          "Hydration",
          "NoHydration",
          "ServerContext",
          "default",
          "clientOnly",
          "island",
          "Comp",
          "path",
          "Component",
          "import",
          "meta",
          "env",
          "START_ISLANDS",
          "IslandComponent",
          "props",
          "_$createComponent",
          "_$mergeProps",
          "children",
          "_el$",
          "_$getNextElement",
          "_tmpl$",
          "_$owner",
          "_$getOwner",
          "_$insert",
          "compProps",
          "SSR",
          "context",
          "fpath",
          "PROD",
          "manifest",
          "script",
          "href",
          "_el$2",
          "_tmpl$2",
          "_$setProperty",
          "_$effect",
          "_p$",
          "_v$",
          "JSON",
          "stringify",
          "_v$2",
          "undefined"
        ],
        "sources": [
          "index.tsx"
        ],
        "sourcesContent": [
          "import { Component, ComponentProps, lazy, splitProps, useContext } from \"solid-js\";\nimport { Hydration, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { IslandManifest } from \"../server/types\";\nexport { default as clientOnly } from \"./clientOnly\";\n\ndeclare module \"solid-js\" {\n  namespace JSX {\n    interface IntrinsicElements {\n      \"solid-island\": {\n        \"data-props\": string;\n        \"data-component\": string;\n        \"data-island\": string;\n        \"data-when\": \"idle\" | \"load\";\n        children: JSX.Element;\n      };\n      \"solid-children\": {\n        children: JSX.Element;\n      };\n    }\n  }\n}\n\nexport function island<T extends Component<any>>(\n  Comp:\n    | T\n    | (() => Promise<{\n        default: T;\n      }>),\n  path?: string\n): T {\n  let Component = Comp as T;\n\n  if (!import.meta.env.START_ISLANDS) {\n    // TODO: have some sane semantics for islands used in non-island mode\n    return lazy(Comp as () => Promise<{ default: T }>);\n  }\n\n  function IslandComponent(props: ComponentProps<any>) {\n    return (\n      <Component {...props}>\n        <solid-children>\n          <NoHydration>{props.children}</NoHydration>\n        </solid-children>\n      </Component>\n    );\n  }\n\n  return ((compProps: ComponentProps<T>) => {\n    if (import.meta.env.SSR) {\n      const context = useContext(ServerContext);\n      const [, props] = splitProps(compProps, [\"children\"]);\n\n      let fpath;\n\n      if (import.meta.env.PROD && context && context.env.manifest && path && path in context.env.manifest) {\n        fpath = (context.env.manifest[path] as IslandManifest).script.href;\n      } else {\n        fpath = `/` + path;\n      }\n\n      return (\n        <Hydration>\n          <solid-island\n            data-props={JSON.stringify(props)}\n            data-component={fpath}\n            data-island={`/` + path}\n            data-when={props[\"client:idle\"] ? \"idle\" : \"load\"}\n          >\n            <IslandComponent {...compProps} />\n          </solid-island>\n        </Hydration>\n      );\n    } else {\n      return <IslandComponent />;\n    }\n  }) as T;\n}\n"
        ],
        "mappings": ";;;;;;;;;;AAAA,SAAoCA,IAAI,EAAEC,UAAU,EAAEC,UAAU,QAAQ,UAAU;AAClF,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,SAASC,aAAa,QAAQ,yBAAyB;AAEvD,SAASC,OAAO,IAAIC,UAAU,QAAQ,cAAc;AAmBpD,OAAO,SAASC,MAAMA,CACpBC,IAIO,EACPC,IAAa,EACV;EACH,IAAIC,SAAS,GAAGF,IAAS;EAEzB,IAAI,CAACG,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,aAAa,EAAE;IAClC;IACA,OAAOf,IAAI,CAACS,IAAqC,CAAC;EACpD;EAEA,SAASO,eAAeA,CAACC,KAA0B,EAAE;IACnD,OAAAC,iBAAA,CACGP,SAAS,EAAAQ,YAAA,CAAKF,KAAK;MAAA,IAAAG,SAAA;QAAA,MAAAC,IAAA,GAAAC,gBAAA,CAAAC,MAAA;QAAAF,IAAA,CAAAG,OAAA,GAAAC,UAAA;QAAAC,QAAA,CAAAL,IAAA,EAAAH,iBAAA,CAEfd,WAAW;UAAA,IAAAgB,SAAA;YAAA,OAAEH,KAAK,CAACG,QAAQ;UAAA;QAAA;QAAA,OAAAC,IAAA;MAAA;IAAA;EAIpC;EAEA,OAASM,SAA4B,IAAK;IACxC,IAAIf,MAAM,CAACC,IAAI,CAACC,GAAG,CAACc,GAAG,EAAE;MACvB,MAAMC,OAAO,GAAG3B,UAAU,CAACG,aAAa,CAAC;MACzC,MAAM,GAAGY,KAAK,CAAC,GAAGhB,UAAU,CAAC0B,SAAS,EAAE,CAAC,UAAU,CAAC,CAAC;MAErD,IAAIG,KAAK;MAET,IAAIlB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACiB,IAAI,IAAIF,OAAO,IAAIA,OAAO,CAACf,GAAG,CAACkB,QAAQ,IAAItB,IAAI,IAAIA,IAAI,IAAImB,OAAO,CAACf,GAAG,CAACkB,QAAQ,EAAE;QACnGF,KAAK,GAAID,OAAO,CAACf,GAAG,CAACkB,QAAQ,CAACtB,IAAI,CAAC,CAAoBuB,MAAM,CAACC,IAAI;MACpE,CAAC,MAAM;QACLJ,KAAK,GAAI,GAAE,GAAGpB,IAAI;MACpB;MAEA,OAAAQ,iBAAA,CACGf,SAAS;QAAA,IAAAiB,SAAA;UAAA,MAAAe,KAAA,GAAAb,gBAAA,CAAAc,OAAA;UAAAC,aAAA,CAAAF,KAAA,mBAGUL,KAAK;UAAAO,aAAA,CAAAF,KAAA,gBACP,GAAE,GAAGzB,IAAI;UAAAyB,KAAA,CAAAX,OAAA,GAAAC,UAAA;UAAAC,QAAA,CAAAS,KAAA,EAAAjB,iBAAA,CAGtBF,eAAe,EAAKW,SAAS;UAAAW,QAAA,CAAAC,GAAA;YAAA,MAAAC,GAAA,GALlBC,IAAI,CAACC,SAAS,CAACzB,KAAK,CAAC;cAAA0B,IAAA,GAGtB1B,KAAK,CAAC,aAAa,CAAC,GAAG,MAAM,GAAG,MAAM;YAAAuB,GAAA,KAAAD,GAAA,CAAAC,GAAA,IAAAH,aAAA,CAAAF,KAAA,eAAAI,GAAA,CAAAC,GAAA,GAAAA,GAAA;YAAAG,IAAA,KAAAJ,GAAA,CAAAI,IAAA,IAAAN,aAAA,CAAAF,KAAA,cAAAI,GAAA,CAAAI,IAAA,GAAAA,IAAA;YAAA,OAAAJ,GAAA;UAAA;YAAAC,GAAA,EAAAI,SAAA;YAAAD,IAAA,EAAAC;UAAA;UAAA,OAAAT,KAAA;QAAA;MAAA;IAMzD,CAAC,MAAM;MACL,OAAAjB,iBAAA,CAAQF,eAAe;IACzB;EACF,CAAC;AACH",
        "x_google_ignoreList": [
          0
        ]
      }
    },
    {
      "name": "vite:css",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "solid-start-server",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":false};import.meta.env.START_SSR = true;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"/home/yongqi/Repositories/yonggqiii.github.io/src/entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"static\";import { template as _$template } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { effect as _$effect } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { setProperty as _$setProperty } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { mergeProps as _$mergeProps } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { getNextElement as _$getNextElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { insert as _$insert } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { createComponent as _$createComponent } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { getOwner as _$getOwner } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<solid-children>`, true, false),\n  _tmpl$2 = /*#__PURE__*/_$template(`<solid-island>`, true, false);\nimport { lazy, splitProps, useContext } from \"/node_modules/.vite/deps/solid-js.js?v=b59f1b3e\";\nimport { Hydration, NoHydration } from \"/node_modules/.vite/deps/solid-js_web.js?v=b59f1b3e\";\nimport { ServerContext } from \"/node_modules/solid-start/server/ServerContext.tsx?v=b59f1b3e\";\nexport { default as clientOnly } from \"/node_modules/solid-start/islands/clientOnly.tsx?v=b59f1b3e\";\nexport function island(Comp, path) {\n  let Component = Comp;\n  if (!import.meta.env.START_ISLANDS) {\n    // TODO: have some sane semantics for islands used in non-island mode\n    return lazy(Comp);\n  }\n  function IslandComponent(props) {\n    return _$createComponent(Component, _$mergeProps(props, {\n      get children() {\n        const _el$ = _$getNextElement(_tmpl$);\n        _el$._$owner = _$getOwner();\n        _$insert(_el$, _$createComponent(NoHydration, {\n          get children() {\n            return props.children;\n          }\n        }));\n        return _el$;\n      }\n    }));\n  }\n  return compProps => {\n    if (import.meta.env.SSR) {\n      const context = useContext(ServerContext);\n      const [, props] = splitProps(compProps, [\"children\"]);\n      let fpath;\n      if (import.meta.env.PROD && context && context.env.manifest && path && path in context.env.manifest) {\n        fpath = context.env.manifest[path].script.href;\n      } else {\n        fpath = `/` + path;\n      }\n      return _$createComponent(Hydration, {\n        get children() {\n          const _el$2 = _$getNextElement(_tmpl$2);\n          _$setProperty(_el$2, \"dataComponent\", fpath);\n          _$setProperty(_el$2, \"dataIsland\", `/` + path);\n          _el$2._$owner = _$getOwner();\n          _$insert(_el$2, _$createComponent(IslandComponent, compProps));\n          _$effect(_p$ => {\n            const _v$ = JSON.stringify(props),\n              _v$2 = props[\"client:idle\"] ? \"idle\" : \"load\";\n            _v$ !== _p$._v$ && _$setProperty(_el$2, \"dataProps\", _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && _$setProperty(_el$2, \"dataWhen\", _p$._v$2 = _v$2);\n            return _p$;\n          }, {\n            _v$: undefined,\n            _v$2: undefined\n          });\n          return _el$2;\n        }\n      });\n    } else {\n      return _$createComponent(IslandComponent, {});\n    }\n  };\n}",
      "start": 1720885728910,
      "end": 1720885728910,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
